{"version":3,"file":"static/js/352.a91305a1.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/contactForm/ContactForm.js","components/contactItem/ContactItem.styled.jsx","components/contactItem/ContactItem.js","components/contactList/ContactList.styled.jsx","components/contactList/ContactList.js","components/filter/Filter.styled.jsx","components/filter/Filter.js","pages/contacts/ContactsPage.styled.jsx","components/notification/Notfication.styled.jsx","components/notification/Notification.js","components/modal/Modal.styled.jsx","components/modal/Modal.js","components/deleteContactWarning/DeleteContactWarning.styled.jsx","components/deleteContactWarning/DeleteContactWarning.js","pages/contacts/ContactsPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\nexport const selectShowModal = state => state.contacts.showModal;\nexport const selectDeleteId = state => state.contacts.deleteId;\nexport const selectIsAddFormOpen = state => state.contacts.isAddFormOpen;\n\nconst collator = new Intl.Collator('en');\n\nfunction SortArray(x, y) {\n  return collator.compare(x.name, y.name);\n}\n\n// Memoize selector\nexport const selectFiltredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const filtredContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n\n    return filtredContacts.sort(SortArray);\n  }\n);\n","import toast, { Toaster } from 'react-hot-toast';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Form,\n  Field,\n  FormLabel,\n  ErrorMessage,\n  ButtonSubmit,\n} from './ContactForm.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst notifyError = message => toast.error(message);\n\nconst phoneRegExp =\n  /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required')\n    .trim(),\n  number: Yup.string()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleAddContact = (name, number) => {\n    dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n        const { name, number } = values;\n\n        if (\n          contacts.some(\n            current => current.name.toLowerCase() === name.toLowerCase()\n          )\n        ) {\n          return notifyError(`${name} is already in contacts.`);\n        }\n\n        handleAddContact(name, number);\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <FormLabel>\n          Name:\n          <Field\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormLabel>\n        <FormLabel>\n          Number:\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormLabel>\n        <ButtonSubmit type=\"submit\">Add</ButtonSubmit>\n        <Toaster position=\"top-left\" toastOptions={{ duration: 3000 }} />\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { ButtonSubmit } from 'components/contactForm/ContactForm.styled';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n  padding: 10px;\n  font-size: 20px;\n  border: ${props => `1px solid ${props.theme.colors.bd}`};\n\n  :first-child {\n    margin-top: 0;\n  }\n`;\n\nexport const ButtonDelete = styled(ButtonSubmit)`\n  margin: 0;\n  margin-left: auto;\n  font-size: 11px;\n`;\n\nexport const FirstLetterBox = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  font-weight: 700;\n  font-size: 22px;\n  text-shadow: 0 0 1px #000000;\n`;\n\nexport const Name = styled.div`\n  width: 200px;\n  margin-left: 25px;\n`;\n\nexport const Number = styled.div`\n  width: 200px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ButtonDelete,\n  Item,\n  FirstLetterBox,\n  Name,\n  Number,\n} from './ContactItem.styled';\nimport { toggleModal } from 'redux/contacts/contactsSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const ContactItem = ({ id, name, number, randomColor }) => {\n  const dispatch = useDispatch();\n  const handleToggleModal = () => dispatch(toggleModal(id));\n\n  return (\n    <Item>\n      <FirstLetterBox style={{ background: `${randomColor}` }}>\n        {name[0]}\n      </FirstLetterBox>\n      <Name>{name}</Name>\n      <Number>{number}</Number>\n      <ButtonDelete type=\"button\" onClick={handleToggleModal}>\n        Delete\n      </ButtonDelete>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  randomColor: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 10px;\n`;\n","import { ContactItem } from 'components/contactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFiltredContacts } from 'redux/contacts/selectors';\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nexport const ContactList = () => {\n  const filtredContacts = useSelector(selectFiltredContacts);\n\n  return (\n    <List>\n      {filtredContacts.map(({ id, name, number }) => {\n        const randomColor = getRandomHexColor();\n        return (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            randomColor={randomColor}\n          />\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  margin-left: auto;\n`;\n\nexport const Input = styled.input`\n  margin-left: 10px;\n`;\n","import { Label, Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleChangeFilter = e => dispatch(changeFilter(e.currentTarget.value));\n\n  return (\n    <Label>\n      Search:\n      <Input\n        type=\"text\"\n        value={filterValue}\n        onChange={handleChangeFilter}\n      ></Input>\n    </Label>\n  );\n};\n","import styled from 'styled-components';\nimport { MdExpandMore, MdExpandLess } from 'react-icons/md';\n\nexport const Phonebook = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 30px;\n  border: ${props => `1px solid ${props.theme.colors.bd}`};\n  border-top: 0px;\n  /* background-color: ${props => ` ${props.theme.colors.primary}`}; */\n`;\n\nexport const Title = styled.h2`\n  display: inline;\n  color: ${props => `${props.theme.colors.hover}`};\n`;\n\nexport const UpperBox = styled.div`\n  padding-bottom: 25px;\n  display: flex;\n  align-items: center;\n  border-bottom: ${props => `1px solid ${props.theme.colors.bd}`};\n`;\n\nexport const ButtonAdd = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 8px;\n  cursor: pointer;\n`;\n\nexport const ShowIcon = styled(MdExpandMore)`\n  width: 34px;\n  height: 34px;\n  fill: ${props => `${props.theme.colors.primary}`};\n  border-radius: 2px;\n  border: 1px solid rgba(0, 0, 0, 0);\n  transition: all 0.218s ease 0s;\n\n  :hover,\n  :focus {\n    fill: ${props => `${props.theme.colors.hover}`};\n    border: 1px solid rgb(198, 198, 198);\n    background: #f7f7f7 linear-gradient(#f7f7f7, #f1f1f1);\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nexport const HideIcon = styled(MdExpandLess)`\n  width: 34px;\n  height: 34px;\n  fill: ${props => `${props.theme.colors.primary}`};\n  border-radius: 2px;\n  border: 1px solid rgba(0, 0, 0, 0);\n\n  transition: all 0.218s ease 0s;\n\n  :hover,\n  :focus {\n    fill: ${props => `${props.theme.colors.hover}`};\n    border: 1px solid rgb(198, 198, 198);\n    background: #f7f7f7 linear-gradient(#f7f7f7, #f1f1f1);\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nexport const Headers = styled.div`\n  display: flex;\n  padding-bottom: 10px;\n  padding-top: 10px;\n  align-items: center;\n  border-bottom: ${props => `1px solid ${props.theme.colors.bd}`};\n`;\n\nexport const Total = styled.div`\n  width: 70px;\n`;\n\nexport const Name = styled.div`\n  width: 200px;\n  margin-left: 10px;\n`;\n\nexport const Number = styled.div`\n  width: 200px;\n`;\n","import styled from 'styled-components';\n\nexport const Notify = styled.p`\n  text-align: center;\n  margin-top: 30px;\n`;\n","import { Notify } from 'components/notification/Notfication.styled';\nimport PropTypes from 'prop-types';\n\nexport const Notification = ({ message }) => {\n  return <Notify>{message}</Notify>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.4);\n  z-index: 1200;\n`;\n\nexport const ModalBox = styled.div``;\n","import { Overlay, ModalBox } from 'components/modal/Modal.styled';\nimport { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggleModal } from 'redux/contacts/contactsSlice';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ children }) => {\n  const dispatch = useDispatch();\n  const handleToggleModal = () => dispatch(toggleModal());\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        handleToggleModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return createPortal(\n    <Overlay>\n      <ModalBox>{children}</ModalBox>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\nimport { ButtonSubmit } from 'components/contactForm/ContactForm.styled';\n\nexport const DeleteModal = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  width: 250px;\n  height: 100px;\n\n  border-radius: 5px;\n  border: ${props => `1px solid ${props.theme.colors.bd}`};\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  background-color: rgba(219, 219, 219);\n`;\n\nexport const Text = styled.div`\n  font-weight: bold;\n`;\n\nexport const ButtonWrapper = styled.div`\n  margin-top: 15px;\n`;\n\nexport const ButtonOk = styled(ButtonSubmit)`\n  margin: 0;\n  margin-right: 50px;\n`;\n\nexport const ButtonNo = styled(ButtonSubmit)`\n  margin: 0;\n`;\n","import { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { toggleModal } from 'redux/contacts/contactsSlice';\n\nimport {\n  DeleteModal,\n  Text,\n  ButtonOk,\n  ButtonNo,\n  ButtonWrapper,\n} from './DeleteContactWarning.styled';\n\nexport const DeleteContactWarning = ({ id }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id));\n    dispatch(toggleModal(id));\n  };\n  const handleCloseModal = () => dispatch(toggleModal(id));\n\n  return (\n    <DeleteModal>\n      <Text>A you sure?</Text>\n      <ButtonWrapper>\n        <ButtonOk type=\"button\" onClick={handleDeleteContact}>\n          Ok\n        </ButtonOk>\n        <ButtonNo type=\"button\" onClick={handleCloseModal}>\n          No\n        </ButtonNo>\n      </ButtonWrapper>\n    </DeleteModal>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { openAddForm } from 'redux/contacts/contactsSlice';\n\nimport {\n  selectError,\n  selectIsLoading,\n  selectContacts,\n  selectDeleteId,\n  selectShowModal,\n  selectIsAddFormOpen,\n} from 'redux/contacts/selectors';\n\nimport { Loader } from 'components/loader/Loader';\nimport { GlobalStyle } from 'components/constants/GlobalStyle';\nimport { ContactForm } from 'components/contactForm/ContactForm';\nimport { ContactList } from 'components/contactList/ContactList';\nimport { Filter } from 'components/filter/Filter';\nimport {\n  ButtonAdd,\n  ShowIcon,\n  HideIcon,\n  Phonebook,\n  Title,\n  UpperBox,\n  Headers,\n  Name,\n  Number,\n  Total,\n} from 'pages/contacts/ContactsPage.styled';\n\nimport { Notification } from 'components/notification/Notification';\nimport { Modal } from 'components/modal/Modal';\nimport { DeleteContactWarning } from 'components/deleteContactWarning/DeleteContactWarning';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const showModal = useSelector(selectShowModal);\n  const deleteId = useSelector(selectDeleteId);\n  const isAddFormOpen = useSelector(selectIsAddFormOpen);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenAddForm = () => {\n    dispatch(openAddForm());\n  };\n\n  return (\n    <div>\n      <Phonebook>\n        <UpperBox>\n          <Title>Contacts</Title>\n          {isLoading && !error && <Loader width={96} />}\n          <ButtonAdd type=\"button\" onClick={handleOpenAddForm}>\n            {!isAddFormOpen ? <ShowIcon /> : <HideIcon />}\n          </ButtonAdd>\n        </UpperBox>\n        {isAddFormOpen && <ContactForm />}\n        <Headers>\n          <Total>Total: {contacts?.length}</Total>\n          <Name>Name:</Name>\n          <Number>Number:</Number>\n          <Filter />\n        </Headers>\n        <div>\n          {contacts?.length < 1 && !isLoading ? (\n            <Notification message={'Phonebook is empty!'} />\n          ) : (\n            <ContactList />\n          )}\n        </div>\n        <GlobalStyle />\n      </Phonebook>\n      {showModal && (\n        <Modal>\n          <DeleteContactWarning id={deleteId} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectShowModal","showModal","selectDeleteId","deleteId","selectIsAddFormOpen","isAddFormOpen","collator","Intl","Collator","SortArray","x","y","compare","name","selectFiltredContacts","createSelector","filterValue","toLowerCase","includes","sort","ContactSchema","Yup","shape","min","max","required","trim","number","matches","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","message","some","current","toast","addContact","handleAddContact","resetForm","type","title","component","position","toastOptions","duration","Item","styled","props","theme","colors","bd","ButtonDelete","ButtonSubmit","FirstLetterBox","Name","Number","ContactItem","id","randomColor","style","background","onClick","toggleModal","List","ContactList","filtredContacts","map","Math","floor","random","toString","Label","Input","Filter","value","onChange","e","changeFilter","currentTarget","Phonebook","primary","Title","hover","UpperBox","ButtonAdd","ShowIcon","MdExpandMore","HideIcon","MdExpandLess","Headers","Total","Notify","Notification","Overlay","ModalBox","modalRoot","document","querySelector","Modal","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","DeleteModal","Text","ButtonWrapper","ButtonOk","ButtonNo","DeleteContactWarning","deleteContact","fetchContacts","Loader","width","openAddForm","length","GlobalStyle"],"sourceRoot":""}