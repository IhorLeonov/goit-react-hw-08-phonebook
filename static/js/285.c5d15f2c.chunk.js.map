{"version":3,"file":"static/js/285.c5d15f2c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/contactForm/ContactForm.styled.jsx","components/contactForm/ContactForm.js","components/contactItem/ContactItem.styled.jsx","components/contactItem/ContactItem.js","components/contactList/ContactList.styled.jsx","components/contactList/ContactList.js","components/filter/Filter.styled.jsx","components/filter/Filter.js","components/app/App.styled.jsx","components/notification/Notfication.styled.jsx","components/notification/Notification.js","components/modal/Modal.styled.jsx","components/modal/Modal.js","components/deleteContactWarning/DeleteContactWarning.styled.jsx","components/deleteContactWarning/DeleteContactWarning.js","pages/contacts/ContactsPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\nexport const selectShowModal = state => state.contacts.showModal;\nexport const selectDeleteId = state => state.contacts.deleteId;\n\n// Compound selector\n// export const selectFiltredContacts = state => {\n//   const contacts = selectContacts(state);\n//   const filterValue = selectFilter(state);\n\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(filterValue.toLowerCase())\n//   );\n// };\n\n// Memoize selector\nexport const selectFiltredContacts = createSelector(\n  // Массив входных селекторов\n  [selectContacts, selectFilter],\n  // Функция преобразователь\n  (contacts, filterValue) => {\n    // Выполняем вычисления и возвращаем результат\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  margin-top: 15px;\n  border-radius: 5px;\n`;\n\nexport const FormLabel = styled.label`\n  display: block;\n  :nth-child(2) {\n    margin-top: 10px;\n  }\n`;\n\nexport const Field = styled(FormikField)`\n  display: block;\n  margin-top: 10px;\n  width: 100%;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  margin-top: 10px;\n  color: red;\n`;\n\nexport const ButtonSubmit = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n\n  display: inline-block;\n  font-family: arial, sans-serif;\n  font-size: 15px;\n  font-weight: bold;\n  color: rgb(68, 68, 68);\n  text-transform: capitalize;\n  text-decoration: none;\n  user-select: none;\n  padding: 0.2em 1.2em;\n  outline: none;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 2px;\n  background: rgb(245, 245, 245) linear-gradient(#f4f4f4, #f1f1f1);\n  transition: all 0.218s ease 0s;\n  :hover,\n  :focus {\n    color: rgb(24, 24, 24);\n    border: 1px solid rgb(198, 198, 198);\n    background: #f7f7f7 linear-gradient(#f7f7f7, #f1f1f1);\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n    cursor: pointer;\n  }\n  :active {\n    color: rgb(51, 51, 51);\n    border: 1px solid rgb(204, 204, 204);\n    background: rgb(238, 238, 238)\n      linear-gradient(rgb(238, 238, 238), rgb(224, 224, 224));\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1) inset;\n  }\n`;\n","import toast, { Toaster } from 'react-hot-toast';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Form,\n  Field,\n  FormLabel,\n  ErrorMessage,\n  ButtonSubmit,\n} from './ContactForm.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst notifyError = message => toast.error(message);\n\nconst phoneRegExp =\n  /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required')\n    .trim(),\n  number: Yup.string()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleAddContact = (name, number) => {\n    dispatch(\n      addContact({\n        name,\n        number,\n      })\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n        const { name, number } = values;\n\n        if (\n          contacts.some(\n            current => current.name.toLowerCase() === name.toLowerCase()\n          )\n        ) {\n          return notifyError(`${name} is already in contacts.`);\n        }\n\n        handleAddContact(name, number);\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <FormLabel>\n          Name:\n          <Field\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormLabel>\n        <FormLabel>\n          Number:\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormLabel>\n        <ButtonSubmit type=\"submit\">Add contact</ButtonSubmit>\n        <Toaster position=\"top-left\" toastOptions={{ duration: 3000 }} />\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { ButtonSubmit } from 'components/contactForm/ContactForm.styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n  :first-child {\n    margin-top: 0;\n  }\n`;\n\nexport const ButtonDelete = styled(ButtonSubmit)`\n  margin: 0;\n  font-size: 11px;\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonDelete, Item } from './ContactItem.styled';\nimport { toggleModal } from 'redux/contacts/contactsSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleToggleModal = () => dispatch(toggleModal(id));\n\n  return (\n    <Item>\n      {name}: {number}\n      <ButtonDelete type=\"button\" onClick={handleToggleModal}>\n        Delete\n      </ButtonDelete>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 15px;\n`;\n","import { ContactItem } from 'components/contactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFiltredContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const filtredContacts = useSelector(selectFiltredContacts);\n\n  return (\n    <List>\n      {filtredContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin-top: 10px;\n  text-align: right;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 10px;\n  width: 100%;\n`;\n","import { Label, Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleChangeFilter = e => dispatch(changeFilter(e.currentTarget.value));\n\n  return (\n    <Label>\n      Find contacts by name:\n      <Input\n        type=\"text\"\n        value={filterValue}\n        onChange={handleChangeFilter}\n      ></Input>\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Phonebook = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 30px;\n  width: 400px;\n\n  border-radius: 5px;\n  border: ${props => `1px solid ${props.theme.colors.bd}`};\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  background-color: ${props => `${props.theme.colors.bg}`};\n`;\n\nexport const MainTitle = styled.h1`\n  text-align: center;\n`;\n\nexport const SecondTitle = styled.h2`\n  margin-top: 15px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const Notify = styled.p`\n  text-align: center;\n  margin-top: 15px;\n`;\n","import { Notify } from 'components/notification/Notfication.styled';\nimport PropTypes from 'prop-types';\n\nexport const Notification = ({ message }) => {\n  return <Notify>{message}</Notify>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.4);\n  z-index: 1200;\n`;\n\nexport const ModalBox = styled.div``;\n","import { Overlay, ModalBox } from 'components/modal/Modal.styled';\nimport { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggleModal } from 'redux/contacts/contactsSlice';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ children }) => {\n  const dispatch = useDispatch();\n  const handleToggleModal = () => dispatch(toggleModal());\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        handleToggleModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return createPortal(\n    <Overlay>\n      <ModalBox>{children}</ModalBox>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\n\nexport const DeleteModal = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 250px;\n  height: 100px;\n\n  border-radius: 5px;\n  border: ${props => `1px solid ${props.theme.colors.bd}`};\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  background-color: rgba(219, 219, 219);\n`;\n\nexport const Text = styled.div`\n  font-weight: bold;\n  margin-right: 10px;\n`;\n\nexport const ButtonOk = styled.button`\n  margin-right: 10px;\n`;\n\nexport const ButtonNo = styled.button``;\n","import { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { toggleModal } from 'redux/contacts/contactsSlice';\n\nimport {\n  DeleteModal,\n  Text,\n  ButtonOk,\n  ButtonNo,\n} from './DeleteContactWarning.styled';\n\nexport const DeleteContactWarning = ({ id }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id));\n    dispatch(toggleModal(id));\n  };\n  const handleCloseModal = () => dispatch(toggleModal(id));\n\n  return (\n    <DeleteModal>\n      <Text>A you sure?</Text>\n      <ButtonOk type=\"button\" onClick={handleDeleteContact}>\n        Ok\n      </ButtonOk>\n      <ButtonNo type=\"button\" onClick={handleCloseModal}>\n        No\n      </ButtonNo>\n    </DeleteModal>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport {\n  selectError,\n  selectIsLoading,\n  selectContacts,\n  selectDeleteId,\n  selectShowModal,\n} from 'redux/contacts/selectors';\n\nimport { GlobalStyle } from 'components/constants/GlobalStyle';\nimport { ContactForm } from 'components/contactForm/ContactForm';\nimport { ContactList } from 'components/contactList/ContactList';\nimport { Filter } from 'components/filter/Filter';\nimport { MainTitle, Phonebook, SecondTitle } from 'components/app/App.styled';\nimport { Notification } from 'components/notification/Notification';\nimport { Modal } from 'components/modal/Modal';\nimport { DeleteContactWarning } from 'components/deleteContactWarning/DeleteContactWarning';\n\n// import { Helmet } from 'react-helmet-async';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const showModal = useSelector(selectShowModal);\n  const deleteId = useSelector(selectDeleteId);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  console.log();\n\n  return (\n    <div>\n      <Phonebook>\n        {/* <Helmet> */}\n        <MainTitle>Phonebook</MainTitle>\n        {/* </Helmet> */}\n        <ContactForm />\n        <Filter />\n        {!isLoading && <SecondTitle>Contacts</SecondTitle>}\n        {isLoading && !error && <SecondTitle>Loading...</SecondTitle>}\n        {contacts?.length < 1 ? (\n          <Notification message={'Phonebook is empty!'} />\n        ) : (\n          <ContactList />\n        )}\n        <GlobalStyle />\n      </Phonebook>\n      {showModal && (\n        <Modal>\n          <DeleteContactWarning id={deleteId} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectShowModal","showModal","selectDeleteId","deleteId","selectFiltredContacts","createSelector","filterValue","name","toLowerCase","includes","Form","styled","FormikForm","FormLabel","Field","FormikField","ErrorMessage","FormikError","ButtonSubmit","ContactSchema","Yup","shape","min","max","required","trim","number","matches","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","message","some","current","toast","addContact","handleAddContact","resetForm","type","title","component","position","toastOptions","duration","Item","ButtonDelete","ContactItem","id","onClick","toggleModal","List","ContactList","filtredContacts","map","Label","Input","Filter","value","onChange","e","changeFilter","currentTarget","Phonebook","props","theme","colors","bd","bg","MainTitle","SecondTitle","Notify","Notification","Overlay","ModalBox","modalRoot","document","querySelector","Modal","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","DeleteModal","Text","ButtonOk","ButtonNo","DeleteContactWarning","deleteContact","fetchContacts","console","log","length","GlobalStyle"],"sourceRoot":""}